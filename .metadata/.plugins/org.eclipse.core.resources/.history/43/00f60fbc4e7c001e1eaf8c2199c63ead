/*
 * fsm_automatic.c
 *
 *  Created on: Nov 5, 2023
 *      Author: mitph
 */
#include "fsm_automatic.h"

int GREEN = 0;
int RED = 0;
int YEL = 0;
int led_index = 0;
int counter0 = 0;
int counter1 = 0;
int counter2 = 0;

void fsm_automatic_run(){
	switch(status){
	case INIT:
		//TODO
		status = MODE1;
		RED = 5;
		GREEN = 3;
		YEL = 2;
		counter0 = RED;
		counter1 = GREEN;
		counter2 = YEL;
		setTimer3(10);
		setTimer2(10);
		setTimer4(10);
		break;

	case MODE1:
		//TODO
		HAL_GPIO_WritePin(RED_HOR_GPIO_Port, RED_HOR_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(GRE_HOR_GPIO_Port, GRE_HOR_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(YEL_HOR_GPIO_Port, YEL_HOR_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(RED_VER_GPIO_Port, RED_VER_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(GRE_VER_GPIO_Port, GRE_VER_Pin, GPIO_PIN_SET);
		HAL_GPIO_WritePin(YEL_VER_GPIO_Port, YEL_VER_Pin, GPIO_PIN_SET);

		status = RED1_GRE2;
		setTimer1(GREEN * 1000);		//set Timer1 = duration RED
		break;
	case RED1_GRE2:
		//TODO
		setRED1();
		setGRE2();
		//chuyển trạng thái
		if (timer1_flag == 1){
			status = RED1_YEL2;
			setTimer1(YEL * 1000);
		}
		if (timer3_flag == 1){
			setTimer3(1000);
			updateBufferMode1(status);
		}
		if (timer2_flag == 1){
			setTimer2(100);
			update7SEG(led_index);
			if (led_index >= 3) led_index = 0;
			else led_index++;
		}
		if (timer4_flag == 1){
			setTimer4(1000);
			counter0--;
		}

		break;

	case RED1_YEL2:
		setRED1();
		setYEL2();

		if (timer1_flag == 1){
			status = GRE1_RED2;
			setTimer1(GREEN * 1000);
		}

		if (timer3_flag == 1){
			setTimer3(1000);
			updateBufferMode1(status);
		}

		if (timer2_flag == 1){
			setTimer2(100);
			update7SEG(led_index);
			if (led_index >= 3) led_index = 0;
			else led_index++;
		}
		if (timer4_flag == 1){
			setTimer4(1000);
			counter0--;
		}
		if (counter0 <= 0) counter0 = RED;

		break;

	case GRE1_RED2:
		//TODO
		setGRE1();
		setRED2();

		//chuyển trạng thái
		if (timer1_flag == 1){
			status = YEL1_RED2;
			setTimer1(YEL * 1000);
		}
		if (timer3_flag == 1){
			setTimer3(1000);
			updateBufferMode1(status);
		}
		if (timer2_flag == 1){
			setTimer2(100);
			update7SEG(led_index);
			if (led_index >= 3) led_index = 0;
			else led_index++;
		}
		if (timer4_flag == 1){
			setTimer4(1000);
			counter1--;
		}
		if (counter1 <= 0) counter1 = GREEN;



		break;

	case YEL1_RED2:
		//TODO
		setYEL1();
		setRED2();
		//chuyển trạng thái
		if (timer1_flag == 1){
			status = RED1_GRE2;
			setTimer1(GREEN * 1000);
		}
		if (timer3_flag == 1){
			setTimer3(1000);
			updateBufferMode1(status);
		}
		if (timer2_flag == 1){
			setTimer2(100);
			update7SEG(led_index);
			if (led_index >= 3) led_index = 0;
			else led_index++;
		}
		if (timer4_flag == 1){
			setTimer4(1000);
			counter2--;
		}
		if (counter2 <= 0) counter2 = YEL;

		break;

	default:
		break;
	}
}

