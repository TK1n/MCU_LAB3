/*
 * fsm_manual.c
 *
 *  Created on: Nov 5, 2023
 *      Author: mitph
 */

#include "fsm_manual.h"
#include "global.h"
void fsm_manual_run(){
	switch(status){
	case MODE2:
		led_index = 0;
		updateBufferMode2();
		update7SEG(led_index);
		setTimer2(500);
		setTimer3(500);
		clearTimer0();
		clearTimer1();
		status = AUTO_RED;
		break;
		setTimer3(500);
	case AUTO_RED:
		if (timer3_flag == 1){
			setTimer3(500);
			set_led(MAN_RED);
		}

		if (timer2_flag == 1){
			setTimer2(100);
			updateBufferMode2();
			update7SEG(led_index);
			if (led_index >= 3) led_index = 0;
			else led_index++;
		}

		if (timer1_flag == 1){
			status = MODE1;
			clearTimer1();
			setTimer1(GREEN * 1000);
		}


		if (isButton1Pressed() == 1){
			status = MODE3;
		}

		if (isButton2Pressed() == 1){
			status = MAN_RED;
			if (RED >= 99) RED = YEL + 1;
			else RED++;
		}

		break;
	case MAN_RED:
		if (timer3_flag == 1){
			setTimer3(500);
			set_led(MAN_RED);
		}
		if (timer2_flag == 1){
			setTimer2(500);
			updateBufferMode2();
			update7SEG(led_index);
		}
		if (isButton2Pressed() == 1){
			status = MAN_RED;
			updateBufferMode2();
			if (RED >= 99) RED = YEL + 1;
			else RED++;
		}
		if (isButton3Pressed() == 1){
			status = AUTO_RED;
			GREEN = RED - YEL;
		}

	case MODE3:
		set_led(AUTO_YEL);

		led_index = 0;
		updateBufferMode2();
		update7SEG(led_index);

		setTimer2(500);
		setTimer3(500);

		clearTimer0();
		clearTimer1();

		status = AUTO_YEL;
		break;

	case AUTO_YEL:
		if (timer3_flag == 1){
			set_led(MAN_YEL);
		}

		if (timer2_flag == 1){
			setTimer2(100);
			update7SEG(led_index);
			if (led_index >= 3) led_index = 0;
			else led_index++;
		}

		if (isButton1Pressed() == 1){
			status = MODE4;
		}

//		if(timer1_flag == 1){
//			status = MODE4;
//			setTimer1(5000);
//		}

		if (isButton2Pressed() == 1){
			status = MAN_YEL;
			if (YEL >= 5) YEL = 1;
			else YEL++;
		}
		break;
	case MAN_YEL:
		if (timer3_flag == 1){
			setTimer3(500);
			set_led(MAN_YEL);
		}

		if (timer2_flag == 1){
			setTimer2(500);
			updateBufferMode3(status);
			update7SEG(led_index);
		}

		if (isButton2Pressed() == 1){
			if (YEL >= 5) YEL = 1;
			else YEL++;
		}

		if (isButton2Pressed() == 1) {
			status = AUTO_YEL;
			if (RED <= YEL) RED = YEL + 1;
			GREEN = RED - YEL;
		}
		break;

	case MODE4:
		set_led(MAN_GRE);

		led_index = 0;
		updateBufferMode2();
		update7SEG(led_index);

		setTimer2(500);
		setTimer3(500);
		clearTimer0();
		clearTimer1();

		status = AUTO_GRE;
		break;

	case AUTO_GRE:
		if (timer3_flag == 1){
			set_led(MAN_GRE);
		}

		if (timer2_flag == 1){
			setTimer2(100);
			update7SEG(led_index);
			if (led_index >= 3) led_index = 0;
			else led_index++;
		}

		if (timer1_flag == 1){
			status = MODE1;
		}

		if (isButton1Pressed() == 1){
			status = MODE4;
			setTimer1(5000);
			updateBufferMode2(status);
		}

		if (isButton2Pressed() == 1){
			status = MAN_GRE;
			if (GREEN >= RED - YEL) GREEN = 1;
			else GREEN++;
		}

		break;
	case MAN_GRE:
		if (timer3_flag == 1){
			setTimer3(500);
			set_led(MAN_GRE);
		}
		if (timer2_flag == 1){
			setTimer2(500);
			updateBufferMode2(status);
			update7SEG(led_index);
		}
		break;
	}
}


/*
 	switch (status){
	case MODE2:
		status = MAN_RED;
		setTimer0(5000);
		setTimer1(500);
		setTimer2(500);
		break;
	case MAN_RED:
		//TODO
		if(timer1_flag == 1){
			set_led(MAN_RED);
			setTimer1(500);
		}

		if (timer2_flag == 1){

		}

		if (isButton1Pressed() == 1){
			status = MAN_GRE;
			setTimer0(5000); // 10 giây không nhấn thì quay về auto
		}
		break;
	case MAN_GRE:
		//TODO

		if(timer1_flag == 1){
			//status = AUTO_GRE;
			set_led(MAN_GRE);
			setTimer1(500);
		}
		if (isButton1Pressed() == 1){
			status = MAN_YEL;
			setTimer0(5000); // 10 giây không nhấn thì quay về auto
		}
		break;
	case MAN_YEL:

		if(timer1_flag == 1){
			set_led(MAN_YEL);
			setTimer1(500);
		}
		if (isButton1Pressed() == 1){
			status = MODE1;
			setTimer0(5000); // 10 giây không nhấn thì quay về auto
		}
		break;
	default:
		break;
	}
 */
